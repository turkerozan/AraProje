package org.cytoscapeapp.cyaraproje.internal;

/**
 *
 *
 */
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import org.cytoscape.work.TaskMonitor;
import javax.swing.JOptionPane;
import org.cytoscape.application.CyApplicationManager;
import org.cytoscape.application.swing.CySwingApplication;
import org.cytoscape.application.swing.CytoPanelComponent;
import org.cytoscape.application.swing.CytoPanelName;
import org.cytoscape.model.*;
import org.cytoscape.task.edit.MapTableToNetworkTablesTaskFactory;
import java.awt.*;
import java.awt.event.*;
import org.cytoscape.view.model.CyNetworkView;
import org.cytoscape.view.presentation.property.BasicVisualLexicon;
import org.cytoscape.view.presentation.property.NodeShapeVisualProperty;
import org.cytoscape.work.TaskMonitor;
import org.cytoscapeapp.cyaraproje.internal.clustering.EdgeRemoval;
import org.cytoscapeapp.cyaraproje.internal.cycle.ConnectedComponents;
import org.cytoscapeapp.cyaraproje.internal.spanningtree.ClearView;
import org.cytoscapeapp.cyaraproje.internal.spanningtree.CreateTableTask;
import org.cytoscapeapp.cyaraproje.internal.spanningtree.MainThread;
import org.cytoscapeapp.cyaraproje.internal.spanningtree.MainThreadTwo;
import org.cytoscapeapp.cyaraproje.internal.spanningtree.MainThreadOne;
import org.cytoscapeapp.cyaraproje.internal.spanningtree.MainThreadThree;
import org.cytoscapeapp.cyaraproje.internal.visuals.ChangeEdgeAttributeListener;

public class ProjectStartMenu extends javax.swing.JPanel implements CytoPanelComponent {

    private ProjectCore spanningtreecore;
    CyApplicationManager cyApplicationManager;
    CySwingApplication cyDesktopService;
    CyNetwork currentnetwork;
    TaskMonitor tm;
    CyNetworkView currentnetworkview;
    public CyActivator cyactivator;
    static String edgeWeightAttribute;
    public static CyColumn edgeWeightAttributeColumn;
    public static final String DEFAULT_WEIGHT_ATTRIBUTE = "DefaultWeightTakenAsOne";
    public int ctrl;
    public MainThread pTreeThread1;
    public MainThreadTwo mThread2;
    public MainThreadOne mThread1;
    public MainThreadThree mThread3;
    public ClearView clearAll;
    public CreateTableTask createTable;
    public EdgeRemoval edgeRemovalThread;
    public int stepcounter = 0;

    public ProjectStartMenu(CyActivator cyactivator, ProjectCore spanningtreecore) {
        initComponents();
        this.cyactivator = cyactivator;
        this.spanningtreecore = spanningtreecore;
        cyApplicationManager = cyactivator.getcyApplicationManager();
        cyDesktopService = cyactivator.getcytoscapeDesktopService();
        if (cyApplicationManager.getCurrentNetworkView() != null) {
            edgeAttributesComboBox.setModel(new javax.swing.DefaultComboBoxModel(
                    ChangeEdgeAttributeListener.getEdgeAttributes(
                            cyApplicationManager.getCurrentNetworkView().getModel()).toArray()));
        }
        edgeAttributesComboBox.setSelectedItem("None");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        viewCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        statusBar = new javax.swing.JProgressBar();
        statusLabel = new javax.swing.JLabel();
        stopButton = new javax.swing.JButton();
        maxRadioButton = new javax.swing.JRadioButton();
        edgeAttributesComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        HAMCycleButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        primsTreeButton = new javax.swing.JButton();
        kruskalsTreeButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        helpButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setRequestFocusEnabled(false);

        jScrollPane1.setToolTipText("");
        jScrollPane1.setMaximumSize(new java.awt.Dimension(400, 32767));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 860));

        jPanel5.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName(""); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("0.5");

        jTextField2.setText("3");

        jLabel1.setText("Infection Rate");

        jLabel4.setText("f value");
        jLabel4.setToolTipText("");

        viewCheckBox.setText("View Infection step by step");
        viewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCheckBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("0");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Algorithm 1", "Algorithm 2", "Algorithm 3" }));

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(viewCheckBox)
                        .add(18, 18, 18)
                        .add(jLabel3)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel4)
                            .add(jComboBox1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(30, 30, 30)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 122, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(viewCheckBox)
                    .add(jLabel3)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Status bar"));

        statusLabel.setText("Tree Making Status");

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(maxRadioButton);
        maxRadioButton.setText("Maximal spanning tree");

        edgeAttributesComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));
        edgeAttributesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgeAttributesComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 102, 51));
        jLabel5.setText("Edge attribute to be taken as weight");

        HAMCycleButton.setForeground(new java.awt.Color(102, 0, 0));
        HAMCycleButton.setText("Create Hamiltonian cycle from spanning tree");
        HAMCycleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HAMCycleButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(statusLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(253, 253, 253)
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 184, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(stopButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(maxRadioButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(edgeAttributesComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 184, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(HAMCycleButton)))
                            .add(statusBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(statusBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(statusLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(stopButton)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(maxRadioButton)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(HAMCycleButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(edgeAttributesComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Run algorithm"));

        primsTreeButton.setForeground(new java.awt.Color(102, 0, 0));
        primsTreeButton.setText("Algorithm 1");
        primsTreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primsTreeButtonActionPerformed(evt);
            }
        });

        kruskalsTreeButton.setForeground(new java.awt.Color(102, 0, 0));
        kruskalsTreeButton.setText("Algorithm 2");
        kruskalsTreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kruskalsTreeButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(primsTreeButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(kruskalsTreeButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(kruskalsTreeButton)
                    .add(primsTreeButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Help"));

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(helpButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, 100, Short.MAX_VALUE)
                .add(exitButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(helpButton)
                    .add(exitButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator1)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jButton2)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jButton2)
                        .add(21, 21, 21)))
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("AraProje");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .add(18, 18, 18)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel5);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 447, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(479, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 523, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 509, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        spanningtreecore.closecore();
        spanningtreecore.closeSpanningTreeStartMenu();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        /*        // TODO add your handling code here:
        SpanningTreeHelp help = new SpanningTreeHelp();
        help.setText(1);
        help.setVisible(true);*/
    }//GEN-LAST:event_helpButtonActionPerformed

    private void kruskalsTreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kruskalsTreeButtonActionPerformed
        /*currentnetworkview = cyApplicationManager.getCurrentNetworkView();
        currentnetwork = currentnetworkview.getModel();
        edgeWeightAttribute = inputEdgeAttributeAndValidate(currentnetwork.getDefaultEdgeTable());
        spannigTreeThread = new KruskalsTreeThread(currentnetwork, currentnetworkview, minRadioButton.isSelected(), edgeWeightAttribute, this);
        spannigTreeThread.start();*/
    }//GEN-LAST:event_kruskalsTreeButtonActionPerformed

    private void primsTreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primsTreeButtonActionPerformed
        // TODO add your handling code here:
        /* currentnetworkview = cyApplicationManager.getCurrentNetworkView();
        currentnetwork = currentnetworkview.getModel();
        edgeWeightAttribute = inputEdgeAttributeAndValidate(currentnetwork.getDefaultEdgeTable());
        CyNode rootNode = askRootNode();
        if(rootNode == null)
        return;
        pTreeThread = new PrimsTreeThread(currentnetwork, currentnetworkview, minRadioButton.isSelected(), edgeWeightAttribute, rootNode, this);
        pTreeThread.start();*/
    }//GEN-LAST:event_primsTreeButtonActionPerformed

    private void HAMCycleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HAMCycleButtonActionPerformed

        /*currentnetworkview = cyApplicationManager.getCurrentNetworkView();
        currentnetwork = currentnetworkview.getModel();
        edgeWeightAttribute = inputEdgeAttributeAndValidate(currentnetwork.getDefaultEdgeTable());
        CyNode rootNode = askRootNode();
        if(rootNode == null)
        return;

        hamCycleThread = new HAMCycle(pTreeThread, rootNode, currentnetwork,
            currentnetworkview, edgeWeightAttribute, minRadioButton.isSelected(), this);
        hamCycleThread.start();*/
    }//GEN-LAST:event_HAMCycleButtonActionPerformed

    private void edgeAttributesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgeAttributesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edgeAttributesComboBoxActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:

        if (pTreeThread1.stop) {
            pTreeThread1.end();
            stopcalculus(null);
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        currentnetworkview = cyApplicationManager.getCurrentNetworkView();
        currentnetwork = currentnetworkview.getModel();
        edgeWeightAttribute = inputEdgeAttributeAndValidate(currentnetwork.getDefaultEdgeTable());
        double q = Double.parseDouble(jTextField1.getText());
        int f = Integer.parseInt(jTextField2.getText());
        String x = jComboBox1.getSelectedItem().toString();
        if (x == "Algorithm 1") {
            mThread1 = new MainThreadOne(currentnetwork, currentnetworkview, viewCheckBox.isSelected(), this, q, f);
            if (viewCheckBox.isSelected()) {
                mThread1.setStep(stepcounter++);
                jLabel3.setText(Integer.toString(stepcounter));
            } else {
                mThread1.setStep(0);
            }
            mThread1.run();
        } else if (x == "Algorithm 2") {
            mThread2 = new MainThreadTwo(currentnetwork, currentnetworkview, viewCheckBox.isSelected(), this, q, f);
            if (viewCheckBox.isSelected()) {
                mThread2.setStep(stepcounter++);
                jLabel3.setText(Integer.toString(stepcounter));
            } else {
                mThread2.setStep(0);
            }
            mThread2.run();
        } else if (x == "Algorithm 3") {
            mThread3 = new MainThreadThree(currentnetwork, currentnetworkview, viewCheckBox.isSelected(), this, q, f);
            if (viewCheckBox.isSelected()) {
                mThread3.setStep(stepcounter++);
                jLabel3.setText(Integer.toString(stepcounter));
            } else {
                mThread3.setStep(0);
            }
            mThread3.run();
        } else {

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        currentnetworkview = cyApplicationManager.getCurrentNetworkView();
        currentnetwork = currentnetworkview.getModel();
        clearAll = new ClearView(currentnetwork, currentnetworkview, this);
        clearAll.start();
        stepcounter = 0;
        jLabel3.setText(Integer.toString(stepcounter));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void viewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCheckBoxActionPerformed
        // TODO add your handling code here:
        if (viewCheckBox.isSelected() == true) // if check box is checked
        {
            jLabel4.setEnabled(false);
            jTextField2.setEnabled(false);
            jButton1.setText("Next");// button text will change into parameter msg..
        } else {    // if check box unchecked 
            jLabel4.setEnabled(true);
            jTextField2.setEnabled(true);
            jButton1.setText("Start");//change the text on the button
        }
    }//GEN-LAST:event_viewCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HAMCycleButton;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox edgeAttributesComboBox;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton kruskalsTreeButton;
    private javax.swing.JRadioButton maxRadioButton;
    private javax.swing.JButton primsTreeButton;
    private javax.swing.JProgressBar statusBar;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton stopButton;
    private javax.swing.JCheckBox viewCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getComponent() {
        return this;
    }

    @Override
    public CytoPanelName getCytoPanelName() {
        return CytoPanelName.WEST;
    }

    @Override
    public String getTitle() {
        return "Ara";
    }

    @Override
    public Icon getIcon() {
        return null;
    }

    public void setStatusLabel(String status) {
        this.statusLabel.setText(status);
    }

    public String inputEdgeAttributeAndValidate(CyTable edgeTable) {
        edgeWeightAttribute = edgeAttributesComboBox.getSelectedItem().toString();
        if (edgeWeightAttribute.equals("None")) {
            // assume all edges with equal weights.
//            edgeWeightAttribute = DEFAULT_WEIGHT_ATTRIBUTE;
//            if(edgeTable.getColumn(edgeWeightAttribute) == null)
//                edgeTable.createColumn(edgeWeightAttribute, Double.class, false, 1.0);
//            edgeWeightAttributeColumn = edgeTable.getColumn(edgeWeightAttribute);
//            return edgeWeightAttribute;
            edgeWeightAttribute = null;
            return null;
        } else {
            if (edgeTable.getColumn(edgeWeightAttribute) != null) {
                edgeWeightAttributeColumn = edgeTable.getColumn(edgeWeightAttribute);
                System.out.println("using " + edgeWeightAttribute + " as edge attribute.");
                return edgeWeightAttribute;
            } else {
                // this case in not possible
                JOptionPane.showMessageDialog(null, " no column with name " + edgeWeightAttribute + " exists. Exiting!", "Spanning Tree", JOptionPane.ERROR_MESSAGE);
                return null;
            }
        }
    }

    public CyNode askRootNode() {
        CyNode rootNode = null;
        String rootNodeName = JOptionPane.showInputDialog(null, "Enter the name of rootNode for Prim's algo (case sensitive).");
        if (rootNodeName != null) {
            for (CyNode node : currentnetwork.getNodeList()) {
                if (currentnetwork.getRow(node).get(CyNetwork.NAME, String.class).equals(rootNodeName)) {
                    rootNode = node;
                }
            }
            if (rootNode == null) {
                JOptionPane.showMessageDialog(null, " no node with name " + rootNodeName + " exists. Aborting!", "Spanning Tree", JOptionPane.ERROR_MESSAGE);
                return null;
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please enter node name!", "Spanning Tree", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        return rootNode;
    }

    public void endOfComputation(String message) {
        statusBar.setIndeterminate(false);
        if (message == null) {
            statusLabel.setText("Calculation Done.");
        } else {
            statusLabel.setText(message);
        }
        kruskalsTreeButton.setEnabled(true);
    }

    public void stopcalculus(String message) {
        statusBar.setIndeterminate(false);
        if (message == null) {
            statusLabel.setText("Interrupted by the user, click start to repeat");
        } else {
            statusLabel.setText(message);
        }
        kruskalsTreeButton.setEnabled(true);
    }

    public void calculatingresult(String message) {
        statusBar.setIndeterminate(true);
        statusBar.setVisible(true);
        if (message == null) {
            statusLabel.setText("Working ...");
        } else {
            statusLabel.setText(message);
        }
        kruskalsTreeButton.setEnabled(false);
    }

    public javax.swing.JComboBox getEdgeAttributeComboBox() {
        return edgeAttributesComboBox;
    }

}
